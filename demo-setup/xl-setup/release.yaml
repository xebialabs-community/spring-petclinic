---
apiVersion: xl-release/v1
kind: Templates
spec:
- directory: container-demo
  children:
  - name: deploy
    type: xldeploy.XLDeployServer
    url: http://xld:4516
    username: admin
    password: !value "xldeploy_XLDeployServer_deploy_password"
  - name: jenkins
    type: jenkins.Server
    url: http://jenkins:8080
    username: admin
    password: !value "jenkins_Server_jenkins_password"
  - template: container release
    scheduledStartDate: 2021-03-17T02:24:29.598Z
    dueDate: 2021-03-17T03:24:29.599Z
    phases:
    - phase: Build
      tasks:
      - name: build image and publish
        type: jenkins.Build
        jenkinsServer: jenkins
        jobName: petclinic-demo
        variableMapping:
          pythonScript.buildNumber: "${buildnumber}"
      - name: Dev Environment Selection
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - envSelection
      color: '#0079BC'
    - phase: Deploy to Dev
      tasks:
      - name: EKS Deployment
        type: xlrelease.SequentialGroup
        precondition: "releaseVariables[\"envSelection\"] == \"AWS\""
        tasks:
        - name: Generate Namespace
          type: xldeploy.Deploy
          server: deploy
          deploymentApplication: Applications/container-demo
          deploymentPackage: "Applications/container-demo/${buildnumber}"
          deploymentEnvironment: Environments/dev_cloud/eks
        - name: Perform Container Deployment
          type: xldeploy.Deploy
          server: deploy
          deploymentApplication: Applications/container-demo
          deploymentPackage: "Applications/container-demo/${buildnumber}"
          deploymentEnvironment: Environments/dev_cloud/eks
      - name: Docker Desktop
        type: xlrelease.SequentialGroup
        precondition: "releaseVariables[\"envSelection\"] != \"AWS\""
        tasks:
        - name: Generate Namespace
          type: xldeploy.Deploy
          server: deploy
          deploymentApplication: Applications/container-demo
          deploymentPackage: "Applications/container-demo/${buildnumber}"
          deploymentEnvironment: Environments/dev/localk8s
        - name: Perform Container Deployment
          type: xldeploy.Deploy
          server: deploy
          deploymentApplication: Applications/container-demo
          deploymentPackage: "Applications/container-demo/${buildnumber}"
          deploymentEnvironment: Environments/dev/localk8s
      color: '#0079BC'
    - phase: Deploy to QA
      tasks:
      - name: GKE Deployment
        type: xlrelease.SequentialGroup
        tasks:
        - name: Generate Namespace
          type: xldeploy.Deploy
          server: deploy
          deploymentApplication: Applications/container-demo
          deploymentPackage: "Applications/container-demo/${buildnumber}"
          deploymentEnvironment: Environments/qa/gke
        - name: Perform Container Deployment
          type: xldeploy.Deploy
          server: deploy
          deploymentApplication: Applications/container-demo
          deploymentPackage: "Applications/container-demo/${buildnumber}"
          deploymentEnvironment: Environments/qa/gke
      color: '#0079BC'
    - phase: Verify
      tasks:
      - name: Verify Application
        type: xlrelease.Task
        owner: admin
      color: '#0079BC'
    - phase: Destroy QA\\\/GKE
      tasks:
      - name: Destroy Deployment
        type: xldeploy.Undeploy
        server: deploy
        deployedApplication: Environments/qa/gke/container-demo
      color: '#0079BC'
    - phase: Destroy Dev\\\/DockerDesktop
      tasks:
      - name: Destroy Desktop Deployment
        type: xldeploy.Undeploy
        server: deploy
        deployedApplication: Environments/dev/localk8s/container-demo
        precondition: "releaseVariables[\"envSelection\"] != \"AWS\""
      - name: Destroy EKS Deployment
        type: xldeploy.Undeploy
        server: deploy
        deployedApplication: Environments/dev_cloud/eks/container-demo
        precondition: "releaseVariables[\"envSelection\"] == \"AWS\""
      color: '#0079BC'
    variables:
    - type: xlrelease.StringVariable
      key: buildnumber
      showOnReleaseStart: false
    - type: xlrelease.StringVariable
      key: envSelection
      requiresValue: false
      showOnReleaseStart: false
      label: Environment Selection
      valueProvider:
        type: xlrelease.ListOfStringValueProviderConfiguration
        values:
        - AWS
        - Docker Desktop
    extensions:
    - name: Dashboard
      type: xlrelease.Dashboard
      owner: admin
      tiles:
      - name: Release progress
        type: xlrelease.ReleaseProgressTile
      - name: Release summary
        type: xlrelease.ReleaseSummaryTile
      - name: Resource usage
        type: xlrelease.ResourceUsageTile
      - name: Release timeline
        type: xlrelease.TimelineTile
      - name: Release health
        type: xlrelease.ReleaseHealthTile
    riskProfile: Default risk profile
  - notifications:
    - notification: AUDIT_REPORT_JOB_ABORTED
      priority: Normal
      subject: "[Release] Audit report was aborted"
      body: |-
        **Your audit report was aborted!**

         Please try to generate it again or contact your Release administrator for assistance.
    - notification: TASK_OVERDUE
      priority: High
      subject: "[Release] ${release.title}: ${task.title}"
      body: "The **${task.title}** task in the **${release.title}** release is overdue.\n\
        \nAfter the task is completed, please mark it as Completed in Release."
      roles:
      - Watcher
      - Release Admin
      - Task Owner
    - notification: TASK_FLAGGED
      priority: High
      subject: "[Release] ${release.title}: ${task.title}"
      body: "The status of the **${task.title}** task in the **${release.title}**\
        \ release was changed to **${task.flagStatus}** with the following comment:\n\
        \n**${release.flagComment}**"
      roles:
      - Watcher
      - Release Admin
      - Task Team
    - notification: MANUAL_TASK_STARTED
      priority: Normal
      subject: "[Release] ${release.title}: ${task.title}"
      body: "The **${task.title}** task in the **${release.title}** release has started\
        \ and is assigned to you or your team.\n\nAfter the task is completed, please\
        \ mark it as Completed in Release."
      roles:
      - Watcher
      - Task Owner
    - notification: TASK_FAILED
      priority: High
      subject: "[Release] ${release.title}: ${task.title}"
      body: "The **${task.title}** task in the **${release.title}** release has failed.\n\
        \nOther tasks could still be in progress, but the release will stop after\
        \ they complete.\n\nYou can retry the task, reassign it to somebody else or\
        \ abort the release."
      roles:
      - Watcher
      - Task Team
      - Task Owner
    - notification: USER_MENTIONED
      priority: Normal
      subject: "[Release] ${mentionedByFullName} mentioned you on ${release.title}:\
        \ ${task.title}"
      body: "**${mentionedByFullName}** mentioned you on the **${task.title}** task\
        \ in the **${release.title}** release:"
    - notification: COMMENT_ADDED
      priority: Normal
      subject: "[Release] ${release.title}: ${task.title}"
      body: "**${comment.authorFullName}** commented on the **${task.title}** task\
        \ in the **${release.title}** release:\n\n${comment.text}"
      roles:
      - Watcher
      - Task Team
      - Task Owner
    - notification: AUDIT_REPORT_JOB_FAILED
      priority: Normal
      subject: "[Release] Audit report has failed"
      body: |-
        **Your audit report has failed!**

         Please try to generate it again or contact your Release administrator for assistance.
    - notification: RELEASE_FAILED
      priority: High
      subject: "[Release] ${release.title}"
      body: "The **${release.title}** release has failed due to a task failure.\n\n\
        The release is now stopped.\n\nYou can retry the failed task, reassign it\
        \ to somebody else or abort the release."
      roles:
      - Release Admin
    - notification: TASK_DUE_SOON
      priority: Normal
      subject: "[Release] ${release.title}: ${task.title}"
      body: "The **${task.title}** task in the **${release.title}** release is due\
        \ in **${task.dueInHours}** hours and **${task.dueInMinutes}** minutes.\n\n\
        After the task is completed, please mark it as Completed in Release."
      roles:
      - Watcher
      - Release Admin
      - Task Owner
    - notification: ACTIVE_TASK_UNASSIGNED
      priority: Normal
      subject: "[Release] ${release.title}: ${task.title}"
      body: "The **${task.title}** task in the **${release.title}** release is active\
        \ but not assigned to anyone anymore.\n\nPlease assign the task to a user\
        \ or a team."
      roles:
      - Watcher
      - Task Team
      - Task Owner
    - notification: RELEASE_FAILING
      priority: High
      subject: "[Release] ${release.title}"
      body: "The **${release.title}** release is failing due to a task failure.\n\n\
        Other tasks may still be in progress, but the release will stop after they\
        \ complete.\n\nYou can retry the failed task, reassign it to somebody else\
        \ or abort the release."
      roles:
      - Release Admin
    - notification: RELEASE_FLAGGED
      priority: High
      subject: "[Release] ${release.title}"
      body: "The status of the **${release.title}** release was changed to **${release.flagStatus}**\
        \ with the following comment:\n\n**${release.flagComment}**"
      roles:
      - Release Admin
    - notification: MANUAL_TASK_STARTED_WITHOUT_OWNER
      priority: Normal
      subject: "[Release] ${release.title}: ${task.title}"
      body: "The **${task.title}** task in the **${release.title}** release has started,\
        \ but it is not assigned.\n\nPlease assign the task to a user or a team."
      roles:
      - Watcher
      - Release Admin
    - notification: RELEASE_COMPLETED
      priority: Normal
      subject: "[Release] ${release.title}"
      body: "The **${release.title}** release has been completed."
      roles:
      - Release Admin
    - notification: TASK_WAITING_FOR_INPUT
      priority: Normal
      subject: "[Release] ${release.title}: ${task.title}"
      body: "The **${task.title}** task in the **${release.title}** release needs\
        \ your input.\n\nPlease enter the required information so the release can\
        \ continue."
      roles:
      - Watcher
      - Task Team
      - Task Owner
    - notification: AUDIT_REPORT_JOB_COMPLETED
      priority: Normal
      subject: "[Release] Report '${report.reportName}' is ready"
      body: "**Your audit report is complete!**\n\n '${report.reportName}' is ready\
        \ for download."
    - notification: RELEASE_STARTED
      priority: Normal
      subject: "[Release] ${release.title}"
      body: "The **${release.title}** release has been started."
      bulkSubject: "[Release] Multiple releases started"
      bulkBody: "The following releases have been started:\n\n${#releases}\n* [${title}](${url})\n\
        ${/releases}"
      roles:
      - Release Admin
    - notification: RELEASE_ABORTED
      priority: Normal
      subject: "[Release] ${release.title}"
      body: "The **${release.title}** release has been aborted."
      bulkSubject: "[Release] Multiple releases aborted"
      bulkBody: "The following releases have been aborted:\n\n${#releases}\n* [${title}](${url})\n\
        ${/releases}"
      roles:
      - Release Admin
    - notification: ACTIVE_TASK_ASSIGNED
      priority: Normal
      subject: "[Release] ${release.title}: ${task.title}"
      body: "The active task **${task.title}** in the **${release.title}** release\
        \ is now assigned to ${task.ownerFullName}."
      roles:
      - Watcher
      - Task Team
      - Task Owner
